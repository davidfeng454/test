name: windows1
on:
  workflow_dispatch:
  
concurrency:
  group: ${{ github.workflow }} #以 workflow 名称作为唯一分组键，相同 workflow 名称的实例将归为一组。
  cancel-in-progress: false

jobs:
  win-server:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: cloudflared
      shell: pwsh # 指定在 Windows 中使用 PowerShell
      env:
          WIN_CODE: ${{ secrets.WIN_CODE }}
      run: |
        echo "cloudflared start"
        curl.exe -JLO https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe
        ls
        # 发送 POST,返回可能是纯文本或 JSON
        $body = '{"machine":"Windows1"}'
        $headers = @{ "Authorization" = "Bearer $env:WIN_CODE"; "Content-Type" = "application/json" }

        # 如果 API 返回 JSON 且需要从某个字段取值，请使用 ConvertFrom-Json （见下方说明）
        $resp = Invoke-RestMethod -Uri "https://jsproj-nu.vercel.app/api/machine_value" -Method Post -Headers $headers -Body $body

        # 情况 A: 返回是纯文本 code(或返回字符串）：
        $cloudflaredCode = $resp.ToString().Trim()
        ./cloudflared-windows-amd64.exe service install $cloudflaredCode

        net user runneradmin ${{ secrets.WIN_CODE }}
        echo "end "
    - name: ssh-server
      shell: pwsh # 指定在 Windows 中使用 PowerShell
      run: |
        # 1. 安装 OpenSSH Server(如未安装)
        Write-Host "✅ 安装 OpenSSH.Server(如未安装）..."
        Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0

        # 2. 启动 SSH 服务并设为开机自启
        Write-Host "✅ 启动 sshd 服务..."
        Start-Service sshd
        Set-Service -Name sshd -StartupType 'Automatic'

        # 3. 启用防火墙规则
        Write-Host "✅ 启用防火墙规则（端口 22)..."
        New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22 -ErrorAction SilentlyContinue
        mkdir C:\Users\runneradmin\.ssh
        cd ${GITHUB_WORKSPACE}
        pwd
        # 确保 .ssh 目录存在
        New-Item -ItemType Directory -Force -Path "C:\Users\runneradmin\.ssh" | Out-Null
        # 将 id_rsa.pub 的内容追加到 authorized_keys
        Get-Content ".\id_rsa.pub" | Out-File -FilePath "C:\Users\runneradmin\.ssh\authorized_keys" -Encoding utf8 -Append
        
        $file = "C:\ProgramData\ssh\sshd_config"  # 替换为你的文件路径
        cat $file
        $updated = @()

        foreach ($line in Get-Content $file) {
            if ($line -match '^\s*#\s*PubkeyAuthentication\s+yes') {
                $updated += 'PubkeyAuthentication yes'
            }
            elseif ($line -match '^\s*(Match\s+Group\s+administrators)') {
                $updated += "# $($matches[1])"
            }
            elseif ($line -match '^\s*(AuthorizedKeysFile\s+__PROGRAMDATA__/ssh/administrators_authorized_keys)') {
                $updated += "# $($matches[1])"
            }
            else {
                $updated += $line
            }
        }

        $updated | Set-Content $file
        cat $file
        Restart-Service sshd


    - name: Don't kill instace     
      shell: pwsh # 指定在 Windows 中使用 PowerShell   
      run: |
        echo "sleep start"
        $startTime = Get-Date
        $endTime = $startTime.AddHours(5.6)
        $path = "D:"
        while ((Get-Date) -lt $endTime -and (-not (Test-Path "$path\1.txt"))) {
        # 在这里写您想执行的命令
          echo "循环还在继续，文件还未出现..."
          Start-Sleep -Seconds 10
        }
        echo "sleep end"      
